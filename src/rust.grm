open DataTypes

%%

%name Rust
%verbose

%pos int
%eop EOF
%noshift EOF

%term   SEMI | LBRA | RBRA | CONST of int | PLUS | LPAR | RPAR | COMMA | LET
        | ASS | FUN | LCHE | RCHE | LTIME of string | COLON | AMP | INT
        | ARROW | PRINT | ID of string | IDRET of string | MAIN | EOF

%nonterm    start of Rust | rust of Rust | block of Rust | print of Rust
            | exp of ExpDT | expPlus of ExpDT | llet of Rust | ass of Rust
            | ffun of Rust | blockfun of Rust | varId of VarDT | call of ExpDT
            | funId of VarDT | aarg of ArgList | arg of ArgList
            | lltime of Ltime list | ppar of ArgList | ret of Ltime
            | ltime of Ltime list | par of ArgList

%nonassoc SEMI LBRA RBRA CONST LPAR RPAR COMMA LET ASS FUN LCHE RCHE LTIME COLON AMP INT ARROW PRINT ID EOF
%nonassoc IDRET
%left PLUS

%%

start: MAIN LPAR RPAR LBRA rust RBRA (rust)

rust: SEMI rust (Comp(Skip (), rust))
    | block rust (Block (block, rust))
    | exp SEMI rust  (Comp (Exp exp, rust))
    | llet  (llet)
    | ass SEMI rust  (Comp (ass, rust))
    | ffun (ffun)
    | print SEMI rust   (Comp(print, rust))
    |    (Empty ())

block: LBRA rust RBRA   (rust)

exp: expPlus    (expPlus)
   | call  (call)
   | LPAR call RPAR  (call)

expPlus: CONST (Const CONST)
       | varId (Var varId)
       | AMP varId (Ref varId)
       | expPlus PLUS expPlus  (Plus (expPlus1, expPlus2))
       | LPAR expPlus RPAR  (expPlus)

call: funId LPAR aarg RPAR  (Call (funId, aarg))

aarg: arg   (arg)
    |   (EmptyAL ())

arg: AMP varId (ArgConcat (EmptyLT (), varId, EmptyAL ()))
   | AMP varId COMMA arg (ArgConcat (EmptyLT(), varId, arg))

llet: LET varId SEMI rust (Let (varId, Undef (), rust))
    | LET varId ASS exp SEMI rust  (Let (varId, exp, rust))

ass: varId ASS exp (Ass (varId, exp))

ffun: FUN funId lltime LPAR ppar RPAR ret blockfun rust  (Fun (funId, lltime, ppar, ret, blockfun, rust))
    | FUN funId lltime LPAR ppar RPAR block rust     (Fun (funId, lltime, ppar, EmptyLT (), block, rust))

blockfun: LBRA rust IDRET  (BlockFun (rust, V IDRET))

lltime: LCHE ltime RCHE (ltime)
      | ([])

ltime: LTIME    ((L LTIME)::[])
     | LTIME COMMA ltime    ((L LTIME)::ltime)

ppar: par   (par)
    | (EmptyAL ())

par: varId COLON AMP LTIME INT  (ArgConcat (L LTIME, varId, EmptyAL ()))
   | varId COLON AMP INT    (ArgConcat (EmptyLT (), varId, EmptyAL ()))
   | varId COLON AMP LTIME INT COMMA par    (ArgConcat (L LTIME, varId, par))
   | varId COLON AMP INT COMMA par    (ArgConcat (EmptyLT (), varId, par))

ret: ARROW AMP LTIME INT    (L LTIME)
   | ARROW AMP INT  (EmptyLT ())

print: PRINT exp RPAR (Print exp)

varId: ID   (V ID)

funId: ID   (V ID)
